                         






                           Design Doc 
                       Smart Air Purifier




 



Introduction
Summary
The product mainly concentrates about the increasing air pollution problem in India. The product supports automated working which lacks in the products that are currently available in the market.

Background
Air pollution, the issue we are going to deal with is to reduce the harmful carbon content in the air and provide pure air for breathing.
There are numerous air purifiers available in the market which offer non automated use, unlike those our product is capable of detecting the level of pollution and fuction accordingly to provide better power efficiency. 
Better power efficiency and better performance is observed by using automated control and Hexagonal body.
Definitions, Acronyms, and Abbreviations
HEPA filter: High Efficiency Particulate Absorber Filter , this is a very powerful filter to purify the air and it is the best available option in the market to work with.
Design Overview
Requirements
Customer requirement: customer may expect efficient air filtering with minimum utilisation of electricity and at a minimal cost possible.
Project Requirements: 3D printed body, HEPA filters, Li-Ion batteries, gas sensors modules, Microcontroller, connection wires, Solar Panels, rechargeable battery mechanism, Fans for sucking and Pushing air in/out the machine.

Documentation

 The link shows the detailed description of HEPA filters                 https://en.wikipedia.org/wiki/HEPA
Minimum Viable Product
A detailed description of the deliverable for this project, this is the minimal functionality required for the project to be considered successful and should not include stretch goals or future work.
Stretch goals
Stretch goals include functionality beyond the scope of the minimum viable product that should be include in the project should time and budget permit. Unlike future work, stretch goals would be smaller tasks for features in support of the minimum viable product.
Future work
This may include ongoing support, expansion of the original scope, work that requires transitions in project ownership, or details of projects designed to be broken up into multiple phases.
Architectural Diagram and  System Diagram:
Application Programming Interface
For services, libraries, and command line interfaces that present an interface which can be wrapped
Recommendations
Using a versioned endpoint simplifies the process of making future backwards incompatible API changes;

User Interface
https://drive.google.com/file/d/1B4h6VF9DMa5QyqHmi3mdckMonjbPPmCN/view?usp=drivesdk
Data Models and Storage
For projects requiring messages queue such as Kafka, MySQL, etc.
Kafka
How many partitions are needed for this topic?
How many days of retention will be needed?
What will the partitioning key become?
How much data will be written to the topic during peak hours?
What type of Kafka cluster will be needed? (E.g. aggregate, queuing, tracking, metrics, logging) 
MySQL
What does the table schema look like and how are they all tied together (provide a UML)?
What sort of updates will be made to the tables?
How will users make queries to the tables? (e.g. Complex joins, pre-filtering, single record gets) 
What the strategy for indexing?
Service Operability
Key Performance Indicators
Key performance indicators (KPI), describe how a service should be monitored and how its performance can be gauged. This would typically include an overview of the types of metrics an application will need to emit, call time, error rate, etc.
Service Level Objectives
Service level objectives (SLOs), set targets for various KPI through alerts via email or SMS, these targets may provide early indicators of approaching a capacity limit, changes in load patterns through various phases of an application, changes in duration of offline processing, etc. 
Project Overview
Communication and Tracking
Any relevant distribution lists, slack channels, taiga projects, etc
Risks
We mainly depend on the android application to control the product, so there is a risk of product getting unusable if android operating system stops working.
Milestones
3D designing, Arranging HEPA filters, Quality check, Verification of working of model.
Project Phases
Project is characterized into five main phases those are
                               


                               Initialising
                               Planning 
                               Monitoring and Controlling
                               Executing
                               Closing

Cost
Level of effort, number of resources, number of hours or weeks, unlike milestones which tracks project time cost should only include engaged time.
1) For the all tasks which are deliverables/visible on user-end side needs to be documented as stories. 
2) Need to guess/estimate the time required in number of hours for the completing that stories which can be captured in taiga. 
3) Assign that task to the right person and document the actual time taken for completing that task. 
Frequently Asked Question
References
Links to any supporting documentation, other projects, or reference material 
Addendum
Additional diagrams or details that do not particularly belong in the body of the design doc. This could also be a place to describe additional examples that would otherwise bloat the introduction section. More specifics on APIs could also be placed here for engineers to reference.
